com.example.myapp.MyActivity
com.example.myapp.MyActivity: MyActivity()
com.example.myapp.R$drawable: int ic_launcher
com.example.myapp.R$layout: int main
com.example.myapp.R$string: int app_name
jline.TerminalFactory$Flavor: jline.TerminalFactory$Flavor[] values()
jline.TerminalFactory$Flavor: jline.TerminalFactory$Flavor valueOf(java.lang.String)
jline.TerminalFactory$Type: jline.TerminalFactory$Type[] values()
jline.TerminalFactory$Type: jline.TerminalFactory$Type valueOf(java.lang.String)
jline.WindowsTerminal$ConsoleMode: jline.WindowsTerminal$ConsoleMode[] values()
jline.WindowsTerminal$ConsoleMode: jline.WindowsTerminal$ConsoleMode valueOf(java.lang.String)
jline.console.ConsoleReader$State: jline.console.ConsoleReader$State[] values()
jline.console.ConsoleReader$State: jline.console.ConsoleReader$State valueOf(java.lang.String)
jline.console.Operation: jline.console.Operation[] values()
jline.console.Operation: jline.console.Operation valueOf(java.lang.String)
jline.console.completer.CandidateListCompletionHandler$Messages: jline.console.completer.CandidateListCompletionHandler$Messages[] values()
jline.console.completer.CandidateListCompletionHandler$Messages: jline.console.completer.CandidateListCompletionHandler$Messages valueOf(java.lang.String)
jline.internal.Log$Level: jline.internal.Log$Level[] values()
jline.internal.Log$Level: jline.internal.Log$Level valueOf(java.lang.String)
org.apache.ivy.osgi.filter.CompareFilter$Operator: org.apache.ivy.osgi.filter.CompareFilter$Operator[] values()
org.apache.ivy.osgi.filter.CompareFilter$Operator: org.apache.ivy.osgi.filter.CompareFilter$Operator valueOf(java.lang.String)
org.fusesource.hawtjni.runtime.Callback
org.fusesource.hawtjni.runtime.Callback: long bind(org.fusesource.hawtjni.runtime.Callback,java.lang.Object,java.lang.String,java.lang.String,int,boolean,boolean,long)
org.fusesource.hawtjni.runtime.Callback: java.lang.String getPlatform()
org.fusesource.hawtjni.runtime.Callback: int getEntryCount()
org.fusesource.hawtjni.runtime.Callback: void setEnabled(boolean)
org.fusesource.hawtjni.runtime.Callback: boolean getEnabled()
org.fusesource.hawtjni.runtime.Callback: void reset()
org.fusesource.hawtjni.runtime.Callback: void unbind(org.fusesource.hawtjni.runtime.Callback)
org.fusesource.jansi.Ansi$Attribute: org.fusesource.jansi.Ansi$Attribute[] values()
org.fusesource.jansi.Ansi$Attribute: org.fusesource.jansi.Ansi$Attribute valueOf(java.lang.String)
org.fusesource.jansi.Ansi$Color: org.fusesource.jansi.Ansi$Color[] values()
org.fusesource.jansi.Ansi$Color: org.fusesource.jansi.Ansi$Color valueOf(java.lang.String)
org.fusesource.jansi.Ansi$Erase: org.fusesource.jansi.Ansi$Erase[] values()
org.fusesource.jansi.Ansi$Erase: org.fusesource.jansi.Ansi$Erase valueOf(java.lang.String)
org.fusesource.jansi.AnsiRenderer$Code: org.fusesource.jansi.AnsiRenderer$Code[] values()
org.fusesource.jansi.AnsiRenderer$Code: org.fusesource.jansi.AnsiRenderer$Code valueOf(java.lang.String)
org.fusesource.jansi.internal.CLibrary
org.fusesource.jansi.internal.CLibrary: void init()
org.fusesource.jansi.internal.CLibrary: int isatty(int)
org.fusesource.jansi.internal.Kernel32
org.fusesource.jansi.internal.Kernel32: void init()
org.fusesource.jansi.internal.Kernel32: long malloc(long)
org.fusesource.jansi.internal.Kernel32: void free(long)
org.fusesource.jansi.internal.Kernel32: int SetConsoleTextAttribute(long,short)
org.fusesource.jansi.internal.Kernel32: int CloseHandle(long)
org.fusesource.jansi.internal.Kernel32: int GetLastError()
org.fusesource.jansi.internal.Kernel32: int FormatMessageW(int,long,int,int,byte[],int,long[])
org.fusesource.jansi.internal.Kernel32: int GetConsoleScreenBufferInfo(long,org.fusesource.jansi.internal.Kernel32$CONSOLE_SCREEN_BUFFER_INFO)
org.fusesource.jansi.internal.Kernel32: long GetStdHandle(int)
org.fusesource.jansi.internal.Kernel32: int SetConsoleCursorPosition(long,org.fusesource.jansi.internal.Kernel32$COORD)
org.fusesource.jansi.internal.Kernel32: int FillConsoleOutputCharacterW(long,char,int,org.fusesource.jansi.internal.Kernel32$COORD,int[])
org.fusesource.jansi.internal.Kernel32: int WriteConsoleW(long,char[],int,int[],long)
org.fusesource.jansi.internal.Kernel32: int GetConsoleMode(long,int[])
org.fusesource.jansi.internal.Kernel32: int SetConsoleMode(long,int)
org.fusesource.jansi.internal.Kernel32: int _getch()
org.fusesource.jansi.internal.Kernel32: int SetConsoleTitle(java.lang.String)
org.fusesource.jansi.internal.Kernel32: int GetConsoleOutputCP()
org.fusesource.jansi.internal.Kernel32: int SetConsoleOutputCP(int)
org.fusesource.jansi.internal.Kernel32: int ReadConsoleInputW(long,long,int,int[])
org.fusesource.jansi.internal.Kernel32: int PeekConsoleInputW(long,long,int,int[])
org.fusesource.jansi.internal.Kernel32: int GetNumberOfConsoleInputEvents(long,int[])
org.fusesource.jansi.internal.Kernel32: int FlushConsoleInputBuffer(long)
org.fusesource.jansi.internal.Kernel32$CONSOLE_SCREEN_BUFFER_INFO
org.fusesource.jansi.internal.Kernel32$CONSOLE_SCREEN_BUFFER_INFO: void init()
org.fusesource.jansi.internal.Kernel32$COORD
org.fusesource.jansi.internal.Kernel32$COORD: void init()
org.fusesource.jansi.internal.Kernel32$INPUT_RECORD
org.fusesource.jansi.internal.Kernel32$INPUT_RECORD: void init()
org.fusesource.jansi.internal.Kernel32$INPUT_RECORD: void memmove(org.fusesource.jansi.internal.Kernel32$INPUT_RECORD,long,long)
org.fusesource.jansi.internal.Kernel32$KEY_EVENT_RECORD
org.fusesource.jansi.internal.Kernel32$KEY_EVENT_RECORD: void init()
org.fusesource.jansi.internal.Kernel32$SMALL_RECT
org.fusesource.jansi.internal.Kernel32$SMALL_RECT: void init()
scala.collection.SeqLike
scala.collection.SeqLike: scala.collection.Seq thisCollection()
scala.collection.SeqLike: scala.collection.Seq toCollection(java.lang.Object)
scala.collection.SeqLike: int length()
scala.collection.SeqLike: java.lang.Object apply(int)
scala.collection.SeqLike: scala.collection.parallel.Combiner parCombiner()
scala.collection.SeqLike: int lengthCompare(int)
scala.collection.SeqLike: boolean isEmpty()
scala.collection.SeqLike: int size()
scala.collection.SeqLike: int segmentLength(scala.Function1,int)
scala.collection.SeqLike: int indexWhere(scala.Function1,int)
scala.collection.SeqLike: int lastIndexWhere(scala.Function1,int)
scala.collection.SeqLike: scala.collection.Iterator permutations()
scala.collection.SeqLike: scala.collection.Iterator combinations(int)
scala.collection.SeqLike: java.lang.Object reverse()
scala.collection.SeqLike: java.lang.Object reverseMap(scala.Function1,scala.collection.generic.CanBuildFrom)
scala.collection.SeqLike: scala.collection.Iterator reverseIterator()
scala.collection.SeqLike: boolean startsWith(scala.collection.GenSeq,int)
scala.collection.SeqLike: boolean endsWith(scala.collection.GenSeq)
scala.collection.SeqLike: int indexOfSlice(scala.collection.GenSeq)
scala.collection.SeqLike: int indexOfSlice(scala.collection.GenSeq,int)
scala.collection.SeqLike: int lastIndexOfSlice(scala.collection.GenSeq)
scala.collection.SeqLike: int lastIndexOfSlice(scala.collection.GenSeq,int)
scala.collection.SeqLike: boolean containsSlice(scala.collection.GenSeq)
scala.collection.SeqLike: boolean contains(java.lang.Object)
scala.collection.SeqLike: java.lang.Object union(scala.collection.GenSeq,scala.collection.generic.CanBuildFrom)
scala.collection.SeqLike: java.lang.Object diff(scala.collection.GenSeq)
scala.collection.SeqLike: java.lang.Object intersect(scala.collection.GenSeq)
scala.collection.SeqLike: java.lang.Object distinct()
scala.collection.SeqLike: java.lang.Object patch(int,scala.collection.GenSeq,int,scala.collection.generic.CanBuildFrom)
scala.collection.SeqLike: java.lang.Object updated(int,java.lang.Object,scala.collection.generic.CanBuildFrom)
scala.collection.SeqLike: java.lang.Object $plus$colon(java.lang.Object,scala.collection.generic.CanBuildFrom)
scala.collection.SeqLike: java.lang.Object $colon$plus(java.lang.Object,scala.collection.generic.CanBuildFrom)
scala.collection.SeqLike: java.lang.Object padTo(int,java.lang.Object,scala.collection.generic.CanBuildFrom)
scala.collection.SeqLike: boolean corresponds(scala.collection.GenSeq,scala.Function2)
scala.collection.SeqLike: java.lang.Object sortWith(scala.Function2)
scala.collection.SeqLike: java.lang.Object sortBy(scala.Function1,scala.math.Ordering)
scala.collection.SeqLike: java.lang.Object sorted(scala.math.Ordering)
scala.collection.SeqLike: scala.collection.Seq toSeq()
scala.collection.SeqLike: scala.collection.immutable.Range indices()
scala.collection.SeqLike: scala.collection.SeqView view()
scala.collection.SeqLike: scala.collection.SeqView view(int,int)
scala.collection.SeqLike: java.lang.String toString()
